name: Static Code Analysis On Bank App Backend


on: 
  push: 
    branches:
      - SeOps


jobs: 
  # Dependency-Check:
  #   name: OWASP-Dependency-Check
  #   runs-on: ubuntu-latest
  #   environment: SecOps

  #   steps: 
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         repository: digitalwitchdemo/main_bank_app_backend
  #         ref: SeOps

  #     - name: SetUp JDK 1.8 
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'zulu' # See 'Supported distributions' for available options
  #         java-version: '21'


  #     - name: Dependency check lib installation
  #       run: | 
  #            mvn org.owasp:dependency-check-maven:check -DnvdApiKey=${{ secrets.NVD_API_KEY }}
  #            ls -la ./target
  #            cat ./target/dependency-check-report.csv


  #     - name: Uploading to DefectDojo
        # run: | 
        #      chmod +x dependency-check-upload.sh
        #      sh dependency-check-upload.sh
        


















  dockerfile-compliance-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Generate Dockerfile JSON.
        run: |
          bash opa_folder/dockerfile-to-json.sh Dockerfile > ${GITHUB_WORKSPACE}/opa_folder/dockerfile.json
          ls -la ${GITHUB_WORKSPACE}/opa_folder

      - name: Run OPA Policy Check
        run: |
          sudo apt install unzip wget -y
          wget  https://github.com/open-policy-agent/opa/releases/download/v1.7.1/opa_linux_amd64 -o opa
          mv opa_linux_amd64 opa
          chmod +x opa
          sudo mv opa /usr/local/bin/opa

          
          ls -la 
          chmod +x opa
          opa --version
          # mv opa /usr/local/bin/opa
          # opa run 

          # echo "Running OPA policy check on Dockerfile"
          # opa version
    
          # # # opa eval --data ./opa/policy.rego --input ${GITHUB_WORKSPACE}/

          # # # #./opa run --server --set=decision_logs.console=true ./opa/policy.rego ${GITHUB_WORKSPACE}/opa/dockerfile.json


